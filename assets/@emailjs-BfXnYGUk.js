class n{constructor(t=0,r="Network Error"){this.status=t,this.text=r}}const d=()=>{if(!(typeof localStorage>"u"))return{get:e=>Promise.resolve(localStorage.getItem(e)),set:(e,t)=>Promise.resolve(localStorage.setItem(e,t)),remove:e=>Promise.resolve(localStorage.removeItem(e))}},a={origin:"https://api.emailjs.com",blockHeadless:!1,storageProvider:d()},h=e=>e?typeof e=="string"?{publicKey:e}:e.toString()==="[object Object]"?e:{}:{},f=async(e,t,r={})=>{const s=await fetch(a.origin+e,{method:"POST",headers:r,body:t}),i=await s.text(),o=new n(s.status,i);if(s.ok)return o;throw o},b=(e,t,r)=>{if(!e||typeof e!="string")throw"The public key is required. Visit https://dashboard.emailjs.com/admin/account";if(!t||typeof t!="string")throw"The service ID is required. Visit https://dashboard.emailjs.com/admin";if(!r||typeof r!="string")throw"The template ID is required. Visit https://dashboard.emailjs.com/admin/templates"},g=e=>{if(e&&e.toString()!=="[object Object]")throw"The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/"},w=e=>e.webdriver||!e.languages||e.languages.length===0,y=()=>new n(451,"Unavailable For Headless Browser"),p=(e,t)=>{if(!Array.isArray(e))throw"The BlockList list has to be an array";if(typeof t!="string")throw"The BlockList watchVariable has to be a string"},v=e=>{var t;return!((t=e.list)!=null&&t.length)||!e.watchVariable},k=(e,t)=>e instanceof FormData?e.get(t):e[t],T=(e,t)=>{if(v(e))return!1;p(e.list,e.watchVariable);const r=k(t,e.watchVariable);return typeof r!="string"?!1:e.list.includes(r)},j=()=>new n(403,"Forbidden"),P=(e,t)=>{if(typeof e!="number"||e<0)throw"The LimitRate throttle has to be a positive number";if(t&&typeof t!="string")throw"The LimitRate ID has to be a non-empty string"},S=async(e,t,r)=>{const s=Number(await r.get(e)||0);return t-Date.now()+s},L=async(e,t,r)=>{if(!t.throttle||!r)return!1;P(t.throttle,t.id);const s=t.id||e;return await S(s,t.throttle,r)>0?!0:(await r.set(s,Date.now().toString()),!1)},R=()=>new n(429,"Too Many Requests"),H=async(e,t,r,s)=>{const i=h(s),o=i.publicKey||a.publicKey,c=i.blockHeadless||a.blockHeadless,l=i.storageProvider||a.storageProvider,m={...a.blockList,...i.blockList},u={...a.limitRate,...i.limitRate};return c&&w(navigator)?Promise.reject(y()):(b(o,e,t),g(r),r&&T(m,r)?Promise.reject(j()):await L(location.pathname,u,l)?Promise.reject(R()):f("/api/v1.0/email/send",JSON.stringify({lib_version:"4.4.1",user_id:o,service_id:e,template_id:t,template_params:r}),{"Content-type":"application/json"}))};export{H as s};
